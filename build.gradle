apply plugin: 'idea'
apply plugin: 'de.undercouch.download'

allprojects {
    group 'pl.edu.pw.elka'
    version '0.1'

    repositories {
        mavenLocal()
        mavenCentral()
    }

}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.postgresql:postgresql:9.3-1102-jdbc41'
        classpath 'de.undercouch:gradle-download-task:2.1.0'
        classpath 'ant:ant:1.7.0'
        classpath 'org.apache.ant:ant-launcher:1.9.6'
    }

}

task cleanDb << {
    // This is needed to get postgresql driver onto the Groovy/Gradle classpath
    URLClassLoader loader = groovy.sql.Sql.class.classLoader
    project.buildscript.configurations.classpath.each { File file ->
        loader.addURL(file.toURI().toURL())
    }

    Properties properties = new Properties()
    properties.load(new FileInputStream("app_config.properties"))

    Class.forName(properties.get('jdbc.driverClassName'))
    println 'Connecting to db...'
    groovy.sql.Sql sql = groovy.sql.Sql.newInstance(
            properties.get('jdbc.url'),
            properties.get('jdbc.username'),
            properties.get('jdbc.password'),
            properties.get('jdbc.driverClassName')
    )
    println 'Connected!'

    String sqlString = new File("tass.sql").text
    sql.execute(sqlString)
    println 'Executed tass.sql script!'
}

def downloadAndUnzip(fileType, year) {
    groovy.util.AntBuilder antBuilder = new groovy.util.AntBuilder()
    def fileName = fileType + year.toString().substring(2)
    download {
        src 'ftp://ftp.fec.gov/FEC/' + year + '/' + fileName + '.zip'
        dest 'data/'
    }
    antBuilder.unzip(
      src: 'data/' + fileName  + '.zip',
      dest: 'data/unzipped/' + fileName,
      overwrite: "false")
}

task getData << {
    mkdir('data/')
    mkdir('data/unzipped/')

    // 1980 - 2012
    for (i in 1980..2012) {
        if (i % 2 == 0) {
            downloadAndUnzip('cn', i)
            downloadAndUnzip('cm', i)
            downloadAndUnzip('pas2', i)
            downloadAndUnzip('indiv', i)
            if (i >= 2000) {
                downloadAndUnzip('ccl', i)
            }
        }
    }

}
